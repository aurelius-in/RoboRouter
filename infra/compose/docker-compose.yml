version: "3.9"
services:
  api:
    build:
      context: ../..
      dockerfile: infra/docker/Dockerfile.api
    image: roborouter-api:dev
    env_file:
      - .env
    ports:
      - "8000:8000"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      - postgres
      - minio
      - ray-head

  ray-head:
    image: rayproject/ray:2.35.0-gpu
    command: ["ray", "start", "--head", "--dashboard-host=0.0.0.0"]
    ports:
      - "8265:8265"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    healthcheck:
      test: ["CMD", "bash", "-lc", "ray status || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20

  ray-worker:
    image: rayproject/ray:2.35.0-gpu
    command: ["ray", "start", "--address=ray-head:6379"]
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    depends_on:
      - ray-head

  minio:
    image: quay.io/minio/minio:RELEASE.2024-09-13T20-26-02Z
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - minio-data:/data

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - pg-data:/var/lib/postgresql/data

  web:
    image: node:20-alpine
    working_dir: /app
    command: ["sh", "-lc", "npm install && npm run dev -- --host 0.0.0.0"]
    volumes:
      - ../../apps/web:/app
    ports:
      - "5173:5173"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5173" ]
      interval: 15s
      timeout: 5s
      retries: 20
    depends_on:
      - api

  prometheus:
    image: prom/prometheus:v2.55.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/ready" ]
      interval: 15s
      timeout: 5s
      retries: 20
    depends_on:
      - api

  grafana:
    image: grafana/grafana:11.1.3
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/login" ]
      interval: 15s
      timeout: 5s
      retries: 20
    depends_on:
      - prometheus

networks:
  default:
    name: roborouter
volumes:
  minio-data:
  pg-data:
  grafana-data:

